# This workflow will build and push a web application to an Azure Static Web App when you change your code.
#
# This workflow assumes you have already created the target Azure Static Web App.
# For instructions see https://docs.microsoft.com/azure/static-web-apps/get-started-portal?tabs=vanilla-javascript
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_STATIC_WEB_APPS_API_TOKEN with the value of your Static Web Apps deployment token.
#    For instructions on obtaining the deployment token see: https://docs.microsoft.com/azure/static-web-apps/deployment-token-management
#
# 3. Change the values for the APP_LOCATION, API_LOCATION and APP_ARTIFACT_LOCATION, AZURE_STATIC_WEB_APPS_API_TOKEN environment variables (below).
#    For instructions on setting up the appropriate configuration values go to https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks

name: Deploy Blazor WASM to Azure Static Web Apps

# Trigger deployment on push to main branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout your repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup .NET SDK
      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Step 3: Restore NuGet dependencies
      - name: Restore dependencies
        run: dotnet restore ./MzTech.csproj

      # Step 4: Build the project
      - name: Build
        run: dotnet build ./MzTech.csproj -c Release

      # Step 5: Publish the project to output folder
      - name: Publish
        run: dotnet publish ./MzTech.csproj -c Release -o ./output

      # Step 6: Deploy to Azure Static Web Apps
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"                       # Skip Oryx build
          app_location: ""                       # Repo root (ignored because skip_app_build=true)
          api_location: ""                       # No Azure Functions API
          skip_app_build: true                   # Important: we already pre-built
          app_artifact_location: "output/wwwroot" # âš¡ Path where index.html exists
